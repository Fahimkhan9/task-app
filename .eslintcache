[{"C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\App.js":"2","C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\reportWebVitals.js":"3","C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\components\\NavigationBar.js":"4","C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\components\\TasksCard.js":"5","C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\components\\Tasks.js":"6","C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\redux\\store.js":"7","C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\redux\\reducers.js":"8","C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\redux\\actionTypes.js":"9","C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\redux\\action.js":"10"},{"size":685,"mtime":1607165251100,"results":"11","hashOfConfig":"12"},{"size":230,"mtime":1607160835764,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":795,"mtime":1607160179177,"results":"15","hashOfConfig":"12"},{"size":524,"mtime":1607166643511,"results":"16","hashOfConfig":"12"},{"size":1612,"mtime":1607166475215,"results":"17","hashOfConfig":"12"},{"size":328,"mtime":1607164612072,"results":"18","hashOfConfig":"12"},{"size":382,"mtime":1607166475171,"results":"19","hashOfConfig":"12"},{"size":51,"mtime":1607164659429,"results":"20","hashOfConfig":"12"},{"size":174,"mtime":1607166427702,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9mt4ka",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\index.js",[],"C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\App.js",[],["45","46"],"C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\components\\NavigationBar.js",["47"],"import Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { useEffect, useState } from \"react\";\r\nconst NavigationBar = () => {\r\n  const [navAvatar, setNavAvatar] = useState();\r\n  useEffect(() => {\r\n    fetch(\"https://picsum.photos/id/77/info\")\r\n      .then((res) => res.json())\r\n      .then((data) => setNavAvatar(data.download_url));\r\n  }, []);\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">TasksBoard</Navbar.Brand>\r\n      <Navbar.Brand href=\"#home\" className=\"ml-auto\">\r\n        <img\r\n          alt=\"\"\r\n          src={navAvatar}\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n        />\r\n      </Navbar.Brand>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\components\\TasksCard.js",[],"C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\components\\Tasks.js",["48"],"import { Button, Modal } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport TasksCard from \"./TasksCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToTaskList } from \"../redux/action\";\r\n\r\nconst Tasks = () => {\r\n  const [show, setShow] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [listTaskTitle, setListTaskTite] = useState(\"\");\r\n  const [errorText, setErrorText] = useState(\"\");\r\n  const listOfTasks = useSelector((state) => state.tasksReducer.tasklist);\r\n\r\n  const handleAddList = () => {\r\n    dispatch(addToTaskList(listTaskTitle));\r\n    setListTaskTite(\"\");\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        {listOfTasks.map((listoftasksdata) => (\r\n          <TasksCard listoftasksdata={listoftasksdata} />\r\n        ))}\r\n      </div>\r\n\r\n      <Button variant=\"primary\" className=\"add-icon\" onClick={handleShow}>\r\n        Launch demo modal\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <div className=\"d-flex\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"New List\"\r\n            onChange={(e) => setListTaskTite(e.target.value)}\r\n          />\r\n          <Button variant=\"primary\" onClick={handleAddList}>\r\n            Save Changes\r\n          </Button>\r\n        </div>\r\n        <p className=\"text-danger\">{errorText}</p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\redux\\store.js",[],"C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\redux\\reducers.js",[],"C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\redux\\actionTypes.js",[],"C:\\Users\\USER\\Desktop\\web development\\task-app\\src\\redux\\action.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":11},{"ruleId":"53","severity":1,"message":"57","line":14,"column":21,"nodeType":"55","messageId":"56","endLine":14,"endColumn":33},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'setErrorText' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]